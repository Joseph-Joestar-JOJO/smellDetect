<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SmellMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.system.domain.Smell">
    <id column="projURL" jdbcType="VARCHAR" property="projurl" />
    <id column="commitHash" jdbcType="VARCHAR" property="commithash" />
    <id column="name" jdbcType="VARCHAR" property="name" />
    <result column="occurTime" jdbcType="DATE" property="occurtime" />
    <result column="projName" jdbcType="VARCHAR" property="projname" />
    <result column="eliminateTime" jdbcType="DATE" property="eliminatetime" />
    <result column="filePath" jdbcType="VARCHAR" property="filepath" />
    <result column="catalog" jdbcType="VARCHAR" property="catalog" />
    <result column="smellInfo" jdbcType="VARCHAR" property="smellinfo" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ruoyi.system.domain.Smell">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projURL, commitHash, `name`, occurTime, projName, eliminateTime, filePath, `catalog`, 
    smellInfo
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="generator.SmellExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from smell
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="generator.SmellExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from smell
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="generator.SmellKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from smell
    where projURL = #{projurl,jdbcType=VARCHAR}
      and commitHash = #{commithash,jdbcType=VARCHAR}
      and `name` = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="generator.SmellKey">
    delete from smell
    where projURL = #{projurl,jdbcType=VARCHAR}
      and commitHash = #{commithash,jdbcType=VARCHAR}
      and `name` = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="generator.SmellExample">
    delete from smell
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert">
    insert into smell (projURL, commitHash, `name`, occurTime,
      projName, eliminateTime, filePath,
      `catalog`, smellInfo, content
      )
    values (#{projurl,jdbcType=VARCHAR},#{commithash,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{occurtime,jdbcType=DATE},
      #{projname,jdbcType=VARCHAR}, #{eliminatetime,jdbcType=DATE}, #{filepath,jdbcType=VARCHAR},
      #{catalog,jdbcType=VARCHAR}, #{smellinfo,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
</insert>
  <insert id="insertSelective" keyColumn="projURL" keyProperty="projurl" parameterType="com.ruoyi.system.domain.Smell" useGeneratedKeys="true">
    insert into smell
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commithash != null">
        commitHash,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="occurtime != null">
        occurTime,
      </if>
      <if test="projname != null">
        projName,
      </if>
      <if test="eliminatetime != null">
        eliminateTime,
      </if>
      <if test="filepath != null">
        filePath,
      </if>
      <if test="catalog != null">
        `catalog`,
      </if>
      <if test="smellinfo != null">
        smellInfo,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commithash != null">
        #{commithash,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="occurtime != null">
        #{occurtime,jdbcType=DATE},
      </if>
      <if test="projname != null">
        #{projname,jdbcType=VARCHAR},
      </if>
      <if test="eliminatetime != null">
        #{eliminatetime,jdbcType=DATE},
      </if>
      <if test="filepath != null">
        #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="catalog != null">
        #{catalog,jdbcType=VARCHAR},
      </if>
      <if test="smellinfo != null">
        #{smellinfo,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.SmellExample" resultType="java.lang.Long">
    select count(*) from smell
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update smell
    <set>
      <if test="record.projurl != null">
        projURL = #{record.projurl,jdbcType=VARCHAR},
      </if>
      <if test="record.commithash != null">
        commitHash = #{record.commithash,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.occurtime != null">
        occurTime = #{record.occurtime,jdbcType=DATE},
      </if>
      <if test="record.projname != null">
        projName = #{record.projname,jdbcType=VARCHAR},
      </if>
      <if test="record.eliminatetime != null">
        eliminateTime = #{record.eliminatetime,jdbcType=DATE},
      </if>
      <if test="record.filepath != null">
        filePath = #{record.filepath,jdbcType=VARCHAR},
      </if>
      <if test="record.catalog != null">
        `catalog` = #{record.catalog,jdbcType=VARCHAR},
      </if>
      <if test="record.smellinfo != null">
        smellInfo = #{record.smellinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update smell
    set projURL = #{record.projurl,jdbcType=VARCHAR},
      commitHash = #{record.commithash,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      occurTime = #{record.occurtime,jdbcType=DATE},
      projName = #{record.projname,jdbcType=VARCHAR},
      eliminateTime = #{record.eliminatetime,jdbcType=DATE},
      filePath = #{record.filepath,jdbcType=VARCHAR},
      `catalog` = #{record.catalog,jdbcType=VARCHAR},
      smellInfo = #{record.smellinfo,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update smell
    set projURL = #{record.projurl,jdbcType=VARCHAR},
      commitHash = #{record.commithash,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      occurTime = #{record.occurtime,jdbcType=DATE},
      projName = #{record.projname,jdbcType=VARCHAR},
      eliminateTime = #{record.eliminatetime,jdbcType=DATE},
      filePath = #{record.filepath,jdbcType=VARCHAR},
      `catalog` = #{record.catalog,jdbcType=VARCHAR},
      smellInfo = #{record.smellinfo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.system.domain.Smell">
    update smell
    <set>
      <if test="occurtime != null">
        occurTime = #{occurtime,jdbcType=DATE},
      </if>
      <if test="projname != null">
        projName = #{projname,jdbcType=VARCHAR},
      </if>
      <if test="eliminatetime != null">
        eliminateTime = #{eliminatetime,jdbcType=DATE},
      </if>
      <if test="filepath != null">
        filePath = #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="catalog != null">
        `catalog` = #{catalog,jdbcType=VARCHAR},
      </if>
      <if test="smellinfo != null">
        smellInfo = #{smellinfo,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where projURL = #{projurl,jdbcType=VARCHAR}
      and commitHash = #{commithash,jdbcType=VARCHAR}
      and `name` = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ruoyi.system.domain.Smell">
    update smell
    set occurTime = #{occurtime,jdbcType=DATE},
      projName = #{projname,jdbcType=VARCHAR},
      eliminateTime = #{eliminatetime,jdbcType=DATE},
      filePath = #{filepath,jdbcType=VARCHAR},
      `catalog` = #{catalog,jdbcType=VARCHAR},
      smellInfo = #{smellinfo,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where projURL = #{projurl,jdbcType=VARCHAR}
      and commitHash = #{commithash,jdbcType=VARCHAR}
      and `name` = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.system.domain.Smell">
    update smell
    set occurTime = #{occurtime,jdbcType=DATE},
      projName = #{projname,jdbcType=VARCHAR},
      eliminateTime = #{eliminatetime,jdbcType=DATE},
      filePath = #{filepath,jdbcType=VARCHAR},
      `catalog` = #{catalog,jdbcType=VARCHAR},
      smellInfo = #{smellinfo,jdbcType=VARCHAR}
    where projURL = #{projurl,jdbcType=VARCHAR}
      and commitHash = #{commithash,jdbcType=VARCHAR}
      and `name` = #{name,jdbcType=VARCHAR}
  </update>
</mapper>